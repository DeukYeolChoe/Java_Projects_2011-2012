package Theater;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class MovieGUI extends javax.swing.JFrame {


    DecimalFormat dollars = new DecimalFormat("$##,##0.00");
    StringBuilder display = new StringBuilder("");
    String stringAmountDue = "";
    String currentTime = "";
    double totalAmount = 0.0;
    int movieIndex;
    String movieName = "";

    /** Creates new form MovieGUI */
    public MovieGUI() {
        initComponents();
        this.getRootPane().setDefaultButton(enterJButton);
        this.setLocationRelativeTo(null);

        String filename = "src\\Movies.txt",      // File name
                moviesName;

        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/icon.png"));

        setDate();
                // Call heading.txt and input it to customerName
        try
        {
            FileReader freader = new FileReader(filename);
            BufferedReader inputFile = new BufferedReader(freader);

            // Read the first name from the file.
            moviesName = inputFile.readLine();

            // Add customer name to JComboBox
            while (moviesName != null)
            {
                moviesComboBox.addItem(moviesName);
                moviesName = inputFile.readLine();
            }
        }
        catch(FileNotFoundException exp)        // catch file not found
        {
            exp.printStackTrace();
        }

        catch(IOException exp)                  // catch reading error
        {
            exp.printStackTrace();
        }

        
        moviesComboBox.requestFocus();
    }

    public void setDate()
    {
        DateFormat dateFormatDate = new SimpleDateFormat("MM/dd/yyyy");
        DateFormat dateFormatTime = new SimpleDateFormat("hh:mm:ss");
        java.util.Date date = new java.util.Date();
        monthYearJTextField.setText(dateFormatDate.format(date));
        currentTime = dateFormatTime.format(date);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        buttonGroup = new javax.swing.ButtonGroup();
        wholeJPanel = new javax.swing.JPanel();
        mainPictureJLabel = new javax.swing.JLabel();
        enterJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        movieSelectionJPanel = new javax.swing.JPanel();
        moviesComboBox = new javax.swing.JComboBox();
        amountDueJPanel = new javax.swing.JPanel();
        amountTextField = new javax.swing.JTextField();
        numberOfTicketsJPanel = new javax.swing.JPanel();
        adultNumberJSpinner = new javax.swing.JSpinner();
        adultCommentJLabel = new javax.swing.JLabel();
        discountJCheckBox = new javax.swing.JCheckBox();
        discountJPanel = new javax.swing.JPanel();
        childCommentJLabel = new javax.swing.JLabel();
        childNumberJSpinner = new javax.swing.JSpinner();
        transactionJPanel = new javax.swing.JPanel();
        displayTransactionJTextarea = new javax.swing.JScrollPane();
        outdisplayJTextArea = new javax.swing.JTextArea();
        resetJButton = new javax.swing.JButton();
        monthYearJTextField = new javax.swing.JTextField();
        displayTotalAmountJTextfield = new javax.swing.JTextField();
        totalSalesJLabel = new javax.swing.JLabel();
        transactionHistoryJLabel = new javax.swing.JLabel();
        JMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        saveJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        exitJMenuItem = new javax.swing.JMenuItem();
        transactionJMenu = new javax.swing.JMenu();
        enterJMenuItem = new javax.swing.JMenuItem();
        clearJMenuItem = new javax.swing.JMenuItem();
        resetJMenuItem = new javax.swing.JMenuItem();
        discountJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        infoJMenuItem = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movie Ticket Sales");
        setResizable(false);

        wholeJPanel.setBackground(new java.awt.Color(255, 255, 255));

        mainPictureJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainPictureJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainpicture.png"))); // NOI18N
        mainPictureJLabel.setToolTipText("Preview Movies ! !");

        enterJButton.setFont(new java.awt.Font("Segoe Print", 0, 26)); // NOI18N
        enterJButton.setMnemonic('E');
        enterJButton.setText("ENTER");
        enterJButton.setToolTipText("Input amount to transaction history");
        enterJButton.setNextFocusableComponent(clearJButton);
        enterJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterJButtonActionPerformed(evt);
            }
        });

        clearJButton.setFont(new java.awt.Font("Segoe Print", 0, 26)); // NOI18N
        clearJButton.setMnemonic('C');
        clearJButton.setText("CLEAR");
        clearJButton.setToolTipText("Clear up!");
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });

        movieSelectionJPanel.setBackground(new java.awt.Color(255, 255, 255));
        movieSelectionJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Movie Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        moviesComboBox.setToolTipText("List movies");
        moviesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moviesComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout movieSelectionJPanelLayout = new javax.swing.GroupLayout(movieSelectionJPanel);
        movieSelectionJPanel.setLayout(movieSelectionJPanelLayout);
        movieSelectionJPanelLayout.setHorizontalGroup(
            movieSelectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movieSelectionJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moviesComboBox, 0, 209, Short.MAX_VALUE)
                .addContainerGap())
        );
        movieSelectionJPanelLayout.setVerticalGroup(
            movieSelectionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movieSelectionJPanelLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(moviesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        amountDueJPanel.setBackground(new java.awt.Color(255, 255, 255));
        amountDueJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Amount Due (Including Tax)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        amountTextField.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        amountTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amountTextField.setToolTipText("Amounts(adult+child+tax)");

        javax.swing.GroupLayout amountDueJPanelLayout = new javax.swing.GroupLayout(amountDueJPanel);
        amountDueJPanel.setLayout(amountDueJPanelLayout);
        amountDueJPanelLayout.setHorizontalGroup(
            amountDueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(amountDueJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(amountTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        amountDueJPanelLayout.setVerticalGroup(
            amountDueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(amountDueJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(amountTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );

        numberOfTicketsJPanel.setBackground(new java.awt.Color(255, 255, 255));
        numberOfTicketsJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "For Adult", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        adultNumberJSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        adultNumberJSpinner.setToolTipText("How mnay tickets do you want?");
        adultNumberJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                adultNumberJSpinnerStateChanged(evt);
            }
        });
        adultNumberJSpinner.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                adultNumberJSpinnerAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                adultNumberJSpinnerAncestorRemoved(evt);
            }
        });

        adultCommentJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        adultCommentJLabel.setText("Prices only for adults");

        discountJCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        discountJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        discountJCheckBox.setText("Matinee Discount");
        discountJCheckBox.setToolTipText("A matinee, senior, and children discount! click plz");
        discountJCheckBox.setNextFocusableComponent(enterJButton);
        discountJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountJCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout numberOfTicketsJPanelLayout = new javax.swing.GroupLayout(numberOfTicketsJPanel);
        numberOfTicketsJPanel.setLayout(numberOfTicketsJPanelLayout);
        numberOfTicketsJPanelLayout.setHorizontalGroup(
            numberOfTicketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberOfTicketsJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adultNumberJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adultCommentJLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, numberOfTicketsJPanelLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(discountJCheckBox)
                .addGap(49, 49, 49))
        );
        numberOfTicketsJPanelLayout.setVerticalGroup(
            numberOfTicketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberOfTicketsJPanelLayout.createSequentialGroup()
                .addGroup(numberOfTicketsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adultNumberJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adultCommentJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(discountJCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        discountJPanel.setBackground(new java.awt.Color(255, 255, 255));
        discountJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "For Child", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        childCommentJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        childCommentJLabel.setText("How many tickets?");
        childCommentJLabel.setToolTipText("Prices only for kids");

        childNumberJSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        childNumberJSpinner.setToolTipText("How mnay tickets do you want?");
        childNumberJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                childNumberJSpinnerStateChanged(evt);
            }
        });
        childNumberJSpinner.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                childNumberJSpinnerAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                childNumberJSpinnerAncestorRemoved(evt);
            }
        });

        javax.swing.GroupLayout discountJPanelLayout = new javax.swing.GroupLayout(discountJPanel);
        discountJPanel.setLayout(discountJPanelLayout);
        discountJPanelLayout.setHorizontalGroup(
            discountJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(childNumberJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(childCommentJLabel)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        discountJPanelLayout.setVerticalGroup(
            discountJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(discountJPanelLayout.createSequentialGroup()
                .addGroup(discountJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(childCommentJLabel)
                    .addComponent(childNumberJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        transactionJPanel.setBackground(new java.awt.Color(255, 255, 255));
        transactionJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transaction", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        outdisplayJTextArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        outdisplayJTextArea.setToolTipText("All of your amount's history");
        outdisplayJTextArea.setMargin(new java.awt.Insets(5, 5, 5, 5));
        displayTransactionJTextarea.setViewportView(outdisplayJTextArea);

        resetJButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        resetJButton.setForeground(new java.awt.Color(255, 0, 0));
        resetJButton.setText("RESET");
        resetJButton.setToolTipText("Clear all values and display");
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });

        monthYearJTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        monthYearJTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        monthYearJTextField.setToolTipText("Date/Month/Year");

        displayTotalAmountJTextfield.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        displayTotalAmountJTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        displayTotalAmountJTextfield.setToolTipText("The sum you have chosen tickets");

        totalSalesJLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        totalSalesJLabel.setText("Total sales amount");

        transactionHistoryJLabel.setFont(new java.awt.Font("Tahoma", 0, 14));
        transactionHistoryJLabel.setText("Transaction History");

        javax.swing.GroupLayout transactionJPanelLayout = new javax.swing.GroupLayout(transactionJPanel);
        transactionJPanel.setLayout(transactionJPanelLayout);
        transactionJPanelLayout.setHorizontalGroup(
            transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionJPanelLayout.createSequentialGroup()
                .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayTransactionJTextarea, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(transactionJPanelLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(transactionHistoryJLabel)))
                .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(transactionJPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(resetJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, transactionJPanelLayout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(displayTotalAmountJTextfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addComponent(monthYearJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transactionJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalSalesJLabel)
                        .addGap(24, 24, 24))))
        );
        transactionJPanelLayout.setVerticalGroup(
            transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transactionJPanelLayout.createSequentialGroup()
                .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(transactionJPanelLayout.createSequentialGroup()
                        .addComponent(monthYearJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(transactionJPanelLayout.createSequentialGroup()
                        .addComponent(transactionHistoryJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(transactionJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(transactionJPanelLayout.createSequentialGroup()
                        .addComponent(totalSalesJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayTotalAmountJTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(resetJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(displayTransactionJTextarea, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout wholeJPanelLayout = new javax.swing.GroupLayout(wholeJPanel);
        wholeJPanel.setLayout(wholeJPanelLayout);
        wholeJPanelLayout.setHorizontalGroup(
            wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPictureJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wholeJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movieSelectionJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addComponent(numberOfTicketsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addComponent(discountJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(amountDueJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(wholeJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactionJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        wholeJPanelLayout.setVerticalGroup(
            wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wholeJPanelLayout.createSequentialGroup()
                .addComponent(mainPictureJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addComponent(movieSelectionJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(numberOfTicketsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(amountDueJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(wholeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(enterJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearJButton))
                    .addGroup(wholeJPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(discountJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(transactionJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        fileJMenu.setText("File");

        saveJMenuItem.setMnemonic('S');
        saveJMenuItem.setText("Save");
        saveJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(saveJMenuItem);

        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        exitJMenuItem.setMnemonic('E');
        exitJMenuItem.setText("Exit");
        exitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(exitJMenuItem);

        JMenuBar.add(fileJMenu);

        transactionJMenu.setMnemonic('T');
        transactionJMenu.setText("Transaction");

        enterJMenuItem.setMnemonic('E');
        enterJMenuItem.setText("Enter");
        enterJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterJMenuItemActionPerformed(evt);
            }
        });
        transactionJMenu.add(enterJMenuItem);

        clearJMenuItem.setMnemonic('C');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        transactionJMenu.add(clearJMenuItem);

        resetJMenuItem.setMnemonic('R');
        resetJMenuItem.setText("Reset");
        resetJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJMenuItemActionPerformed(evt);
            }
        });
        transactionJMenu.add(resetJMenuItem);

        discountJMenuItem.setMnemonic('D');
        discountJMenuItem.setText("Discount");
        discountJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountJMenuItemActionPerformed(evt);
            }
        });
        transactionJMenu.add(discountJMenuItem);

        JMenuBar.add(transactionJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        infoJMenuItem.setMnemonic('I');
        infoJMenuItem.setText("Info");
        infoJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(infoJMenuItem);

        JMenuBar.add(helpJMenu);

        setJMenuBar(JMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wholeJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wholeJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

public void setLabel(JLabel mainPictureJLabel)
    {
        movieIndex = moviesComboBox.getSelectedIndex();
        String movieSelection = moviesComboBox.getSelectedItem().toString();
        switch(movieIndex)
        {
            case 0:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 1:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 2:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 3:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 4:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 5:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 6:
                movieName = "images//" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 7:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 8:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 9:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
            case 10:
                movieName = "images/" + movieSelection + ".png";
                mainPictureJLabel.setIcon(new ImageIcon(movieName));
        }

    }
    private void enterJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_enterJButtonActionPerformed
    {//GEN-HEADEREND:event_enterJButtonActionPerformed
        String name = moviesComboBox.getSelectedItem().toString();
        setDate();
        int adultTickets = Integer.parseInt(adultNumberJSpinner.getValue().toString());
        int childTickets = Integer.parseInt(childNumberJSpinner.getValue().toString());
        int totalTickets = 0;
        final int MAX_VALUSE = 100;

        try
        {
            Invoice myBill = new Invoice(adultTickets, childTickets, discountJCheckBox.isSelected());

            if((adultTickets <=0 && adultTickets > MAX_VALUSE )
                    && (childTickets <=0 && childTickets > MAX_VALUSE ))
                throw new NumberFormatException();

            myBill.calculateBill();
            totalTickets = childTickets + adultTickets;

            totalAmount += myBill.totalAmount;

            displayBill(name, myBill, totalAmount, totalTickets);
            //display.delete(0, display.length());
        }
         catch (NumberFormatException nume)
         {
               JOptionPane.showMessageDialog( null,
                    " 1 < Tickets numbers < 100!",
                    "Incorrect Data", JOptionPane.WARNING_MESSAGE );
               moviesComboBox.requestFocus();
         }
    }//GEN-LAST:event_enterJButtonActionPerformed

    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJButtonActionPerformed
    {//GEN-HEADEREND:event_clearJButtonActionPerformed

        mainPictureJLabel.setIcon(new ImageIcon("images/Select.png"));
        moviesComboBox.setSelectedIndex(0);
        adultNumberJSpinner.setValue(1);
        childNumberJSpinner.setValue(0);
        discountJCheckBox.setSelected(false);
        amountTextField.setText("");
        adultNumberJSpinner.requestFocus();
    }//GEN-LAST:event_clearJButtonActionPerformed

    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resetJButtonActionPerformed
    {//GEN-HEADEREND:event_resetJButtonActionPerformed
        mainPictureJLabel.setIcon(new ImageIcon("images/Select.png"));
        moviesComboBox.setSelectedIndex(0);
        adultNumberJSpinner.setValue(1);
        childNumberJSpinner.setValue(0);
        discountJCheckBox.setSelected(false);
        amountTextField.setText("");
        outdisplayJTextArea.setText("");
        displayTotalAmountJTextfield.setText("");
        totalAmount = 0.0;
        display.delete(0, display.length());
        adultNumberJSpinner.requestFocus();

    }//GEN-LAST:event_resetJButtonActionPerformed

    private void discountJCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_discountJCheckBoxActionPerformed
    {//GEN-HEADEREND:event_discountJCheckBoxActionPerformed
        displayAmountDue();
    }//GEN-LAST:event_discountJCheckBoxActionPerformed

    private void saveJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveJMenuItemActionPerformed
    {//GEN-HEADEREND:event_saveJMenuItemActionPerformed
         try
	{
		FileWriter fwriter = new FileWriter("saveFile.doc");    // creates saveFile.txt
		PrintWriter outputFile = new PrintWriter(fwriter);

		outputFile.println(display.toString());                // Input display values to saveFile.txt
                outputFile.close();
	}

	catch(IOException e)
	{
		e.printStackTrace();
	}
    }//GEN-LAST:event_saveJMenuItemActionPerformed

    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printJMenuItemActionPerformed
    {//GEN-HEADEREND:event_printJMenuItemActionPerformed
        try
        {
            outdisplayJTextArea.print();
        }
        catch (PrinterException ex)
        {
            Logger.getLogger(MovieGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printJMenuItemActionPerformed

    private void enterJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_enterJMenuItemActionPerformed
    {//GEN-HEADEREND:event_enterJMenuItemActionPerformed
       enterJButtonActionPerformed(evt);
    }//GEN-LAST:event_enterJMenuItemActionPerformed

    private void resetJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_resetJMenuItemActionPerformed
    {//GEN-HEADEREND:event_resetJMenuItemActionPerformed
       resetJButtonActionPerformed(evt);
    }//GEN-LAST:event_resetJMenuItemActionPerformed

    private void discountjMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_discountjMenuItemActionPerformed
    {//GEN-HEADEREND:event_discountjMenuItemActionPerformed
       discountJCheckBox.setSelected(true);
    }//GEN-LAST:event_discountjMenuItemActionPerformed

    private void infoJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_infoJMenuItemActionPerformed
    {//GEN-HEADEREND:event_infoJMenuItemActionPerformed
        HelpMessage infoWindow = new HelpMessage();
        infoWindow.setVisible(true);
    }//GEN-LAST:event_infoJMenuItemActionPerformed

    private void adultNumberJSpinnerAncestorRemoved(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_adultNumberJSpinnerAncestorRemoved
    {//GEN-HEADEREND:event_adultNumberJSpinnerAncestorRemoved
}//GEN-LAST:event_adultNumberJSpinnerAncestorRemoved

    private void adultNumberJSpinnerAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_adultNumberJSpinnerAncestorAdded
    {//GEN-HEADEREND:event_adultNumberJSpinnerAncestorAdded
}//GEN-LAST:event_adultNumberJSpinnerAncestorAdded

    private void adultNumberJSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_adultNumberJSpinnerStateChanged
    {//GEN-HEADEREND:event_adultNumberJSpinnerStateChanged
        displayAmountDue();
}//GEN-LAST:event_adultNumberJSpinnerStateChanged

    private void childNumberJSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_childNumberJSpinnerStateChanged
    {//GEN-HEADEREND:event_childNumberJSpinnerStateChanged
        displayAmountDue();
    }//GEN-LAST:event_childNumberJSpinnerStateChanged

    private void childNumberJSpinnerAncestorAdded(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_childNumberJSpinnerAncestorAdded
    {//GEN-HEADEREND:event_childNumberJSpinnerAncestorAdded
    }//GEN-LAST:event_childNumberJSpinnerAncestorAdded

    private void childNumberJSpinnerAncestorRemoved(javax.swing.event.AncestorEvent evt)//GEN-FIRST:event_childNumberJSpinnerAncestorRemoved
    {//GEN-HEADEREND:event_childNumberJSpinnerAncestorRemoved
    }//GEN-LAST:event_childNumberJSpinnerAncestorRemoved

    private void moviesComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_moviesComboBoxActionPerformed
    {//GEN-HEADEREND:event_moviesComboBoxActionPerformed
        setLabel(mainPictureJLabel);
    }//GEN-LAST:event_moviesComboBoxActionPerformed

    private void exitJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitJMenuItemActionPerformed
    {//GEN-HEADEREND:event_exitJMenuItemActionPerformed
        System.exit(1);
    }//GEN-LAST:event_exitJMenuItemActionPerformed

    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearJMenuItemActionPerformed
    {//GEN-HEADEREND:event_clearJMenuItemActionPerformed
       clearJButtonActionPerformed(evt);
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    private void discountJMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_discountJMenuItemActionPerformed
    {//GEN-HEADEREND:event_discountJMenuItemActionPerformed
        discountJCheckBox.setSelected(true);
    }//GEN-LAST:event_discountJMenuItemActionPerformed

    private void displayAmountDue()
    {
        int adultTickets = Integer.parseInt(adultNumberJSpinner.getValue().toString());
        int childTickets = Integer.parseInt(childNumberJSpinner.getValue().toString());
        final int MAX_VALUSE = 100;
        
        try
        {
            Invoice myBill = new Invoice(adultTickets, childTickets, discountJCheckBox.isSelected());

            if((adultTickets <=0 && adultTickets > MAX_VALUSE )
               && (childTickets <=0 && childTickets > MAX_VALUSE ))
                throw new NumberFormatException();

            myBill.calculateBill();

            this.stringAmountDue = dollars.format(myBill.totalAmount);
            amountTextField.setText(stringAmountDue);
            //display.delete(0, display.length());
        }
        catch (NumberFormatException nume)
        {
               JOptionPane.showMessageDialog( null,
                    " 1 < Tickets numbers < 100!",
                    "Incorrect Data", JOptionPane.WARNING_MESSAGE );
               moviesComboBox.requestFocus();
         }
    }

    public void displayBill(String name, Invoice bill, double totalAmount, int tickets)
    {
        String n =  Integer.toString(tickets);
        display.append(currentTime + '\n');
        display.append(padSpaces(name, n , dollars.format(bill.totalAmount) + '\n'));
      
        display.append("----------------------------------------------" + '\n');
        outdisplayJTextArea.setText(display.toString());
        displayTotalAmountJTextfield.setText(dollars.format(totalAmount));
    }

    private StringBuffer padSpaces(String first, String second, String third)
    {
       final int MAX_SPACES = 40;
       final int HALF_SPACES = 25;
       StringBuffer spaces = new StringBuffer();

       //find number of spaces needed to pad the string

      spaces.append(first);

      int midSpaces = HALF_SPACES - first.length();
      System.out.println(midSpaces);
      for (int i = 0; i < midSpaces ; i++)
           spaces.append(" ");
      spaces.append(second);

      int rightSpaces = MAX_SPACES - HALF_SPACES - second.length() - third.length();
      for (int i = 0; i < rightSpaces ; i++)
        spaces.append(" ");
      spaces.append(third);

       return spaces;
    }

    public static void main(String args[]) {
                Splash splashDisplay = new Splash(4000);
                splashDisplay.showSplash();

                MovieGUI myMoney = new MovieGUI();
        
                myMoney.setVisible(true);
                myMoney.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar JMenuBar;
    private javax.swing.JLabel adultCommentJLabel;
    private javax.swing.JSpinner adultNumberJSpinner;
    private javax.swing.JPanel amountDueJPanel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel childCommentJLabel;
    private javax.swing.JSpinner childNumberJSpinner;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JCheckBox discountJCheckBox;
    private javax.swing.JMenuItem discountJMenuItem;
    private javax.swing.JPanel discountJPanel;
    private javax.swing.JTextField displayTotalAmountJTextfield;
    private javax.swing.JScrollPane displayTransactionJTextarea;
    private javax.swing.JButton enterJButton;
    private javax.swing.JMenuItem enterJMenuItem;
    private javax.swing.JMenuItem exitJMenuItem;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JMenuItem infoJMenuItem;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JLabel mainPictureJLabel;
    private javax.swing.JTextField monthYearJTextField;
    private javax.swing.JPanel movieSelectionJPanel;
    private javax.swing.JComboBox moviesComboBox;
    private javax.swing.JPanel numberOfTicketsJPanel;
    private javax.swing.JTextArea outdisplayJTextArea;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JButton resetJButton;
    private javax.swing.JMenuItem resetJMenuItem;
    private javax.swing.JMenuItem saveJMenuItem;
    private javax.swing.JLabel totalSalesJLabel;
    private javax.swing.JLabel transactionHistoryJLabel;
    private javax.swing.JMenu transactionJMenu;
    private javax.swing.JPanel transactionJPanel;
    private javax.swing.JPanel wholeJPanel;
    // End of variables declaration//GEN-END:variables

}
